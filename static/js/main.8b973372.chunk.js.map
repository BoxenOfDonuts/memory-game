{"version":3,"sources":["components/Header/Header.js","components/Card/Card.js","components/Board/Board.js","components/hooks/http.js","App.js","index.js"],"names":["Header","props","className","title","Card","imageURL","cardName","id","onCardClick","onClick","src","alt","shuffle","array","console","log","newArray","i","length","j","Math","floor","random","ScoreBoard","score","highScore","GameBoard","isNewGame","numberOfCards","url","dependencies","useState","isLoading","setIsLoading","fetchData","setFetchedData","useEffect","fetch","then","response","ok","Error","json","data","catch","error","useHttp","fetchedData","gameCards","setGameCards","cards","desiredLength","slice","map","card","card_images","image_url_small","name","content","Board","setScore","setHighScore","clickedCards","setClickedCards","setIsNewGame","prevClickedCards","useRef","current","includes","prevState","prevScore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b973372.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = (props) => {\n  return (\n    <div className=\"header\">\n      <h1>{props.title}</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import './Card.css';\n\nconst Card = ({ imageURL, cardName, id, onCardClick }) => {\n  return (\n    <figure className=\"game-card\" onClick={() => onCardClick(id)}>\n      <img src={imageURL} alt={cardName} />\n    </figure>\n  );\n};\n\nexport default Card;\n","import { useEffect, useState, useRef } from 'react';\nimport { useHttp } from '../hooks/http';\nimport Card from '../Card/Card';\nimport './Board.css'\n\nconst shuffle = (array) => {\n  console.log('shufflin');\n  const newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n};\n\nconst randomArray = (array, desiredLength) => {\n  return shuffle(array).slice(0, desiredLength);\n};\n\nconst Board = (props) => {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [clickedCards, setClickedCards] = useState([]);\n  const [isNewGame, setIsNewGame] = useState(false);\n  const numberOfCards = 18;\n  const prevClickedCards = useRef();\n\n  useEffect(() => {\n    prevClickedCards.current = clickedCards;\n  });\n\n  useEffect(() => {\n    const resetAll = () => {\n      if (score > highScore) {\n        setHighScore(score);\n      }\n      setScore(0);\n      setClickedCards([]);\n      setIsNewGame(false);\n    };\n    if (!isNewGame) return;\n    console.log('is new game udpated');\n    resetAll();\n  }, [isNewGame]);\n\n  const handleClick = (id) => {\n    console.log(`handle click ${prevClickedCards.current}`);\n    if (!prevClickedCards.current.includes(id)) {\n      setClickedCards((prevState) => [...prevState, id]);\n      setScore((prevScore) => prevScore + 1);\n    } else {\n      console.log('you lose!');\n      setIsNewGame(true);\n    }\n  };\n\n  return (\n    <div className=\"board\">\n      <ScoreBoard score={score} highScore={highScore} />\n      <GameBoard\n        onCardClick={handleClick}\n        isNewGame={isNewGame}\n        clickedCards={clickedCards}\n        numberOfCards={numberOfCards}\n      />\n    </div>\n  );\n};\n\nconst ScoreBoard = ({ score, highScore }) => {\n  return (\n    <div className=\"scoreboard\">\n      <h3>\n        Score: {score} High Score: {highScore}\n      </h3>\n    </div>\n  );\n};\n\nconst GameBoard = ({ onCardClick, isNewGame, numberOfCards }) => {\n  const [isLoading, fetchedData] = useHttp(null, [isNewGame]);\n  const [gameCards, setGameCards] = useState(null);\n\n  console.log(`loading ${isLoading}`);\n\n  useEffect(() => {\n    console.log('mounting!');\n    if (fetchedData) {\n      const cards = randomArray(fetchedData.data, numberOfCards);\n      setGameCards(\n        cards.map((card) => {\n          return (\n            <Card\n              key={card.id}\n              imageURL={card.card_images[0].image_url_small}\n              cardName={card.name}\n              id={card.id}\n              onCardClick={onCardClick}\n            />\n          );\n        })\n      );\n    }\n  }, [isLoading]);\n\n  let content = <div className='loading'>Loading...</div>;\n\n  if (!isLoading && !isNewGame && gameCards) {\n    content = shuffle(gameCards);\n  }\n\n  return <div className=\"game-board\">{content}</div>;\n};\n\nexport default Board;\n","import { useEffect, useState } from 'react';\n\nexport const useHttp = (url, dependencies) => {\n  // const [ isLoading, setIsLoading ] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchData, setFetchedData] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetch('https://db.ygoprodeck.com/api/v7/cardinfo.php?cardsetocg=Vol.1')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch.');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setFetchedData(data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, dependencies);\n\n  return [isLoading, fetchData];\n};\n","import './App.css';\nimport Header from './components/Header/Header';\nimport Board from './components/Board/Board';\n\nconst App = () => {\n  const mainTitle = 'Memory Game';\n\n  return (\n    <div className=\"main-app\">\n      <Header title={mainTitle} />\n      <Board />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}